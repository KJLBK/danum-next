name: Deploy

on:
    push:
        branches: [main]
    workflow_dispatch:

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Node.js environment
              uses: actions/setup-node@v4
              with:
                  node-version: '20.12.1'

            - name: Cache node modules
              uses: actions/cache@v4
              id: cache
              with:
                  path: node_modules
                  key: npm-packages-${{ hashFiles('**/package-lock.json') }}

            - name: Create .env file
              run: echo "VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}" >> .env

            - name: Install Dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: npm ci

            - name: Lint and Format Check
              run: |
                  npm run lint
                  npm run format

            - name: Build
              run: npm run build

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and push
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-nginx

            - name: Pull and restart Docker Container
              uses: appleboy/ssh-action@master
              with:
                  key: ${{ secrets.SSH_KEY }}
                  host: ${{ secrets.HOST }}
                  username: ${{ secrets.USER }}
                  script: |
                      sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/my-nginx
                      if sudo docker ps -a --filter "name=my-nginx" --format '{{.Names}}' | grep -w my-nginx; then
                        sudo docker stop my-nginx
                        sudo docker rm my-nginx
                      fi
                      sudo docker run -d --rm --name my-nginx -p 80:80 ${{ secrets.DOCKERHUB_USERNAME }}/my-nginx
