name: Deploy to EC2

on:
    push:
        branches: [main]

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'

            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-npm-

            - name: Install dependencies
              run: npm ci

            - name: Run lint
              run: npm run lint

            - name: Create .env file
              run: |
                  echo "NEXT_PUBLIC_BASE_URL=${{ secrets.NEXT_PUBLIC_BASE_URL }}" > .env

            - name: Log in to DockerHub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Build and push Docker image
              uses: docker/build-push-action@v4
              with:
                  context: .
                  push: true
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/nextjs-app:latest

            - name: Deploy to EC2
              uses: appleboy/ssh-action@master
              with:
                  host: ${{secrets.HOST}}
                  username: ${{secrets.USER}}
                  key: ${{secrets.SSH_KEY}}
                  script: |
                      sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
                      sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/nextjs-app:latest
                      sudo docker stop nextjs-app || true
                      sudo docker rm nextjs-app || true
                      echo "NEXT_PUBLIC_BASE_URL=${{ secrets.NEXT_PUBLIC_BASE_URL }}" > /home/${{ secrets.USER }}/danum-next/.env
                      sudo docker run -d --name nextjs-app -p 3000:3000 \
                        --env-file /home/${{ secrets.USER }}/danum-next/.env \
                        ${{ secrets.DOCKERHUB_USERNAME }}/nextjs-app:latest
                      sudo docker image prune -f
